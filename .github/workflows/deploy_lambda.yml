name: Deploy SAM Application

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      # Step 3: Install SAM CLI
      - name: Install AWS SAM CLI
        run: |
          sudo apt-get install unzip
          curl "https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip" -L -o "aws-sam-cli-linux.zip"
          unzip aws-sam-cli-linux.zip -d sam-installation
          sudo ./sam-installation/install --update

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install -r sam_lambda/image-gen-devops/image-gen/requirements.txt

      # Step 5: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      # Step 6: Build the SAM application
      - name: Build SAM application
        run: sam build -t sam_lambda/template.yaml

      # Step 7: Deploy the SAM application
      - name: Deploy SAM application
        run: |
          sam deploy --no-confirm-changeset --stack-name image-gen-devops-79 \
            --capabilities CAPABILITY_IAM \
            --region eu-west-1 \
            --resolve-s3 \
            -t sam_lambda/image-gen-devops/template.yaml
